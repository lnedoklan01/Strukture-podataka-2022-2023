#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <malloc.h>
#include <stdbool.h>
#define _CRT_SECURE_NO_WARNINGS
#define LINE 1024


struct _drzava;
typedef struct _drzava*
position_list;

struct _grad;
typedef struct _grad*
position_stablo;

typedef struct _drzava
{
	char ime[LINE];
	position_list next;
	position_stablo grad;
}drzava;

typedef struct _grad
{
	char ime[LINE];
	double broj_stan;
	position_stablo left;
	position_stablo right;
} grad;

bool read_make_list(position_list head, char* filename);
bool ispis_liste(position_list head);


int main()
{
	char imeDat[32] = { 0 };

	printf("koju datoteku otvaramo?");
	scanf("%s", imeDat);

	FILE* fp = NULL;
	fp = fopen(imeDat, "r");

	if (!fp)
		{
			printf("Greska u ucitavanju datoteke!\n");
			return -1;
		}
	drzava head = { "0",NULL,NULL };	

		read_make_list(&head, imeDat);

	ispis_liste(&head);

	return 0;
}

bool read_make_list(position_list head, char* filename)
{
	FILE* datoteka = NULL;
	char* privremeni_buffer = NULL;
	char buffer[LINE] = { 0 };
	char temp_ime[LINE] = { 0 };
	char gradic[LINE] = { 0 };
	int n = 0;
	char temp_ime[LINE] = { 0 };
	datoteka = fopen(filename, "r");

	if (!datoteka)
	{
		perror("\nDatoteka nije otvorena\n");
		return false;
	}

	while (!feof(datoteka))
	{
		fgets(buffer, LINE, datoteka);
		privremeni_buffer = buffer;
		while (strlen(privremeni_buffer))
		{
			if (sscanf(privremeni_buffer, " %s %n", temp_ime, &n) == 1)
			{
				insert_list(head, new_in_list(temp_ime));
			}
			privremeni_buffer += n;
		}
	}
fclose(datoteka);
}
		return true;

}
}


